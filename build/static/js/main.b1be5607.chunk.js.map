{"version":3,"sources":["bg-me.jpg","components/Background/index.js","components/Card/index.js","components/CodeCard/index.js","components/Chart/index.js","work1.mp4","components/WorksPanel/index.js","components/Bio/index.js","App.js","index.js"],"names":["Container","styled","img","src","Img","CardContainer","div","ButtonBarContainer","Circle","props","color","colorTitle","keyframes","Title","ButtonBar","onClick","onClose","onMaxim","onMinim","title","Card","useState","isHidden","isMax","isMin","hideBtn","children","CardBase","hljs","registerLanguage","json","blink","BlinkingCursor","span","sleep","time","Promise","resolve","setTimeout","CodeCard","text","setText","a","type","param","character","oldText","typeInterval","randomMs","Math","random","useEffect","typing","highlightAll","SimpleLineChart","ResponsiveContainer","AreaChart","data","name","score","YAxis","tick","XAxis","dataKey","Area","stroke","fill","CustomCard","className","autoPlay","controls","loop","Work1","TextContainer","ColorIcons","LinksConttainer","Link","timeAnimation","BioCard","target","href","App","jsonText","JSON","stringify","info","undefined","BioText","bio","join","Background","Bio","Chart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1be5607.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg-me.ca8eb6b6.jpg\";","import styled from \"styled-components\";\nimport Img from \"../../bg-me.jpg\";\n\nconst Container = styled.img`\n  opacity: 10%;\n  width: 100%;\n  height: auto;\n  position: fixed;\n  top: 0;\n  z-index: -1;\n`;\n\nexport default () => {\n  return <Container src={Img} />\n};\n","import { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nexport const CardContainer = styled.div`\n  justify-self: flex-end;\n  margin: 0.5rem;\n  padding: 0.75rem;\n  border-radius: 0.75rem;\n  box-shadow: 0 0 20px -5px black;\n  padding-bottom: 2rem;\n\n  width: min-content;\n  max-width: 75%;\n\n  font-size: 12px;\n  backdrop-filter: blur(10px);\n`;\n\nconst ButtonBarContainer = styled.div`\n  display: flex;\n  width: 100%;\n  background: transparent;\n  flex-direction: row;\n  margin-bottom: 1rem;\n`;\n\nconst Circle = styled.div`\n  background-color: ${(props) => props.color};\n  width: 12px;\n  height: 12px;\n  margin: 0 5px;\n  border-width: 2px;\n  border-color: #0006;\n  box-shadow: 0 0 10px -5px black;\n  border-radius: 50%;\n`;\n\nconst colorTitle = keyframes`\n  0% { color: #f1fa8c; }\n  50% { color: #bd93f9; }\n  100% { color: #f1fa8c; }\n`;\n\nconst Title = styled.div`\n  display: flex;\n  margin: 0 auto 0;\n  padding: 0 2rem;\n  font-family: monospace;\n  font-weight: bolder;\n  font-size: 14px;\n  animation: ${colorTitle} 5s infinite ease-in-out;\n`;\n\nexport const ButtonBar = (props) => (\n  <ButtonBarContainer>\n    <Circle color=\"#ff5555\" onClick={() => props.onClose()} />\n    <Circle color=\"#f1fa8c\" onClick={() => props.onMaxim()} />\n    <Circle color=\"#50fa7b\" onClick={() => props.onMinim()} />\n    <Title>{props.title}</Title>\n  </ButtonBarContainer>\n);\n\nconst Card = (props) => {\n  const [isHidden, setIsHidden] = useState(false);\n  const [isMax, setIsMax] = useState(false);\n  const [isMin, setIsMin] = useState(false);\n\n  return (\n    <CardContainer isHidden={isHidden} isMax={isMax} isMin={isMin} {...props}>\n      {props.hideBtn ? <></> : <ButtonBar title={props.title} />}\n      {props.children}\n    </CardContainer>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport hljs from \"highlight.js/lib/core\";\nimport json from \"highlight.js/lib/languages/json\";\n\nimport \"../../dracula.css\";\n\nimport CardBase from \"../Card\";\n\nconst Card = styled(CardBase)`\n  height: 200px;\n  width: 400px;\n  overflow: hidden;\n`;\n\nhljs.registerLanguage(\"json\", json);\n\nconst blink = keyframes` to {visibility: hidden} `;\n\nconst BlinkingCursor = styled.span`\n  color: #8be9fd;\n  animation: ${blink} 1s steps(2, start) infinite;\n`;\n\nconst sleep = (time) => new Promise((resolve) => setTimeout(resolve, time));\n\nconst CodeCard = (props) => {\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    typing(props.children);\n  }, [props.children]);\n\n  async function typing(text) {\n    // while (true) {\n      await type(text);\n      // await sleep(5000);\n      // await del(text);\n      // await sleep(5000);\n    // }\n  }\n\n  useEffect(() => hljs.highlightAll(), [text]);\n\n  async function type(param) {\n    for (let character of param) {\n      setText((oldText) => oldText + character);\n      await sleep(typeInterval());\n    }\n  }\n\n  function typeInterval() {\n    const randomMs = 100 * Math.random();\n    return randomMs < 50 ? 10 : randomMs;\n  }\n\n  async function del(param) {\n    for (let character of param) {\n      setText((oldText) => oldText.slice(0, -1));\n      await sleep(1);\n    }\n  }\n\n  return (\n    <Card title={props.title}>\n      <pre>\n        <code>{text}</code>\n        <BlinkingCursor>_</BlinkingCursor>\n      </pre>\n    </Card>\n  );\n};\n\nexport default CodeCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { XAxis, ResponsiveContainer, AreaChart, Area, YAxis } from \"recharts\";\n\nimport CardBase from \"../Card\";\n\nconst Card = styled(CardBase)`\n  height: 200px;\n  min-width: 90%;\n\n`;\n\nconst SimpleLineChart = () => {\n  const data = [\n    { name: \"Node\", score: 10 },\n    { name: \"Web\", score: 9 },\n    { name: \"Dart\", score: 5 },\n    { name: \"Linux\", score: 15 },\n    { name: \"C#\", score: 4 },\n    { name: \"Python\", score: 15 },\n    { name: \"Sql\", score: 7 },\n  ];\n\n  return (\n    <Card title=\"Knowledge Distribution\">\n      <ResponsiveContainer>\n        <AreaChart\n          data={data}\n        >\n          <YAxis tick={<div />} />\n          <XAxis dataKey=\"name\" />\n          <Area\n            type=\"natural\"\n            dataKey=\"score\"\n            stroke=\"#8be9fd\"\n            fill=\"#282a36\"\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    </Card>\n  );\n};\n\nexport default SimpleLineChart;\n","export default __webpack_public_path__ + \"static/media/work1.e335a23c.mp4\";","import styled from \"styled-components\";\nimport { CardContainer, ButtonBar } from \"../Card\";\n\nimport \"./index.css\";\nimport Work1 from \"../../work1.mp4\";\n\nconst CustomCard = styled(CardContainer)`\n  margin: auto;\n  width: 75%;\n  height: min-content;\n  align-self: stretch;\n  margin-bottom: 5rem;\n`;\n\nexport default () => (\n  <CustomCard>\n    <ButtonBar title=\"some works\" />\n\n    <div className=\"slider\">\n      <div className=\"slides\">\n        <div className=\"slide-item\">\n          <div className=\"WorkContainer\">\n            {/* space */}\n            <h1>Space Invaders like game</h1>\n            <video autoPlay controls loop src={Work1} />\n          </div>\n        </div>\n      </div>\n    </div>\n  </CustomCard>\n);\n","import styled, { keyframes } from \"styled-components\";\nimport CardBase from \"../Card\";\n\nimport { FaGithub, FaInstagram } from \"react-icons/fa\";\n\nconst Card = styled(CardBase)`\n  width: max-content;\n`;\n\nconst TextContainer = styled.span`\n  color: #f8f8f2;\n  font-size: 16px;\n  padding: 0.5rem;\n  white-space: pre-line;\n`;\n\nconst ColorIcons = keyframes`\n0% { color: #ff79c6; }\n50% { color: #50fa7b; }\n100% { color: #ff79c6; }\n`;\nconst LinksConttainer = styled.div`\n  font-size: 48px;\n  display: flex;\n  flex-direction: row;\n  margin: auto;\n  padding: 1rem;\n  padding-bottom: 0;\n  justify-content: space-evenly;\n`;\n\nconst Link = styled.a`\n  animation: ${ColorIcons} ${(props) => props.timeAnimation}s infinite;\n`;\n\nconst BioCard = (props) => {\n  return (\n    <Card title=\"bio\">\n      <TextContainer>{props.children}</TextContainer>\n\n      <LinksConttainer>\n        {/* <Link target=\"_blank\" href=\"https://www.instagram.com/__the.w__/\" timeAnimation={10 * Math.random()}>\n          <FaInstagram />\n        </Link> */}\n        <Link target=\"_blank\" href=\"https://github.com/wthew\" timeAnimation={10 * Math.random()}>\n          <FaGithub />\n        </Link>\n      </LinksConttainer>\n    </Card>\n  );\n};\n\nexport default BioCard;\n","import \"./App.css\";\n\nimport { info } from \"./me.json\";\nimport { bio } from \"./me.json\";\n\nimport Background from \"./components/Background\";\nimport CodeCard from \"./components/CodeCard\";\nimport Chart from \"./components/Chart\";\nimport WorksPanel from \"./components/WorksPanel\";\nimport Bio from \"./components/Bio\";\n\nconst App = () => {\n  const jsonText = JSON.stringify(info, undefined, 3);\n  const BioText = bio.join(\"\\n\");\n\n  return (\n    <>\n      <Background />\n      <div className=\"App\">\n        <div className=\"main toEnd\">\n          <CodeCard title=\"info\">{jsonText}</CodeCard>\n        </div>\n        <div className=\"main toStart\">\n          <Bio>{BioText}</Bio>\n        </div>\n        <div className=\"main\">\n          <Chart />\n        </div>\n        <div className=\"main\">\n          <WorksPanel />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}